name: Start Docker Stack

on:
  push:
    branches:
      - CUC-384-Github-Actions

jobs:
  start-docker-stack:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker/setup-docker@v1
    
    - name: Create .env file backend
      run: |
        echo "DATABASE_URI=${{DB_URI}}" > backend/.env
        echo "EMAIL_AUTH=${{EMAIL_AUTH}}" >> backend/.env
        echo "EMAIL_PW=${{EMAIL_PW}}" >> backend/.env
        echo "EMAIL_PORT=${{EMAIL_PORT}}" >> backend/.env
        echo "EMAIL_HOST=${{EMAIL_HOST}}" >> backend/.env
        echo "FRONTEND_URL=${{FRONTEND_URL}}" >> backend/.env
        echo "GITHUB_CLIENT_SECRET=${{G_CLIENT_SECRET}}" >> backend/.env
        echo "GITHUB_CLIENT_ID=${{G_CLIENT_ID}}" >> backend/.env
        echo "PASSPORT_GITHUB_LOCAL_PW_FIELD=${{PASSPORT_GITHUB_LOCAL_PW_FIELD}}" >> backend/.env

    - name: Create .env file fronted
      run: |
        echo "API_SERVER=${{API_SERVER}}" > frontend/.env
        echo "GITHUB_CLIENT_ID=${{G_CLIENT_ID}}" >> frontend/.env
        echo "EMAIL_PW=${{EMAIL_PW}}" >> frontend/.env
        echo "VERSION=SET" >> frontend/.env

    - name: Build and start Docker stack
      run: |
        chmod +x runDocker.sh
        ./runDocker.sh

    # execute npm test in the backend container
    - name: Run npm test backend
      run: |
        docker exec Seed-backend npm test > testResultsBackend.txt 2>&1
    
    - name: Clean up the result
      run: |
        line_number=$(grep -n "Test Suites:" testResultsBackend.txt | cut -d ":" -f 1)
        if [ -n "$line_number" ]; then
          tail -n +$line_number testResultsBackend.txt > cleanResultsBackend.txt
        fi

    - name: Read message from cleanResults
      run: |
        message=$(cat cleanResultsBackend.txt)
        echo "::set-output name=message::$message"
      id: read_message

    - name: Send simple notification
      uses: mikesprague/teams-incoming-webhook-action@v1
      with:
        github-token: ${{ github.token }}
        webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        title: 'Push Notification'
        deploy-card: true
        timestamp: Europe/Berlin
        color: 'info'
        text: ${{ steps.read_message.outputs.message }}
